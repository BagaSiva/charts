{{- include "sch.config.init" (list . "ibmElasticsearch.sch.chart.config.values") -}}
{{- if not .Values.secretGeneration.existingSecret }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.secretJob ) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . ) | indent 4 }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 4 }}
  {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 4 }}
  {{- end }}
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 480
  template:
    metadata:
      labels:
        release: {{ .Release.Name | quote }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Chart.Name }}-secret-job
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
{{- if .Values.enableCp4dMeteringLabels }}
{{ include "elasticsearch.cp4dMeteringLabels" (dict "root" . "name" .sch.chart.components.secretJob) | indent 8 }}
{{- end }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ include "sch.names.fullName" (list .) | quote }}
      {{- else if not (eq .Values.rbac.serviceAccountName "") }}
      serviceAccountName: {{ .Values.rbac.serviceAccountName | quote }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
      securityContext:
{{ include "sch.security.securityContext" (list . .sch.chart.credsPodSecurityContext) | indent 8 }}
      containers:
      - name: {{ template "elasticsearch.uname" . }}-secret-job
        imagePullPolicy: IfNotPresent
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.secretGeneration.image.repository }}:{{ .Values.secretGeneration.image.tag }}
        command: ["/bin/bash", "-c", "/opencontent/init.sh"]
        volumeMounts:
          - name: secret-generation-config
            mountPath: /opencontent
          - name: certs-volume
            mountPath: /certs
        securityContext:
{{ include "sch.security.securityContext" (list . .sch.chart.credsContainerSecurityContext) | indent 10 }}
        resources:
          requests:
            memory: "{{ .Values.secretGeneration.resources.requests.memory }}"
            cpu: "{{ .Values.secretGeneration.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.secretGeneration.resources.limits.memory }}"
            cpu: "{{ .Values.secretGeneration.resources.limits.cpu }}"
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          {{- if .Values.global.ibmProduct }}
          - name: PRODUCT_NAME
            value: {{ .Values.global.ibmProduct | quote }}
          {{- end }}

      volumes:
        - name: secret-generation-config
          configMap:
            name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.secretConfig) }}
            defaultMode: 0555
        - name: certs-volume
          emptyDir: {}

{{- end }}
